stages:
- stage: Publish
  displayName: Publish To Internal Nuget Feed Stage
  jobs:
  - job: PublishTo_CsWinRT_InternalFeed
    steps:
    - checkout: self
      clean: True
      persistCredentials: True

# Use NuGet 5.3 
    - task: NuGetToolInstaller@1
      displayName: Use NuGet 5.3
      continueOnError: True
      inputs:
        versionSpec: 5.3

# Use .NET Core SDK 6
    - task: UseDotNet@2
      displayName: Use .NET Core SDK 6
      inputs:
        version: 6.x

# Component Detection 
    - task: ComponentGovernanceComponentDetection@0
      displayName: Component Detection

# Download x86 
    - task: DownloadPipelineArtifact@2
      displayName: 'Download x86 '
      inputs:
        artifactName: release_x86
        itemPattern: ''
        targetPath: $(Build.SourcesDirectory)\release_x86

# Download x64
    - task: DownloadPipelineArtifact@2
      displayName: Download x64
      inputs:
        artifactName: release_x64
        itemPattern: ''
        targetPath: $(Build.SourcesDirectory)\release_x64

# Download arm64 
    - task: DownloadPipelineArtifact@2
      displayName: Download arm64
      inputs:
        artifactName: release_arm64
        itemPattern: ''
        targetPath: $(Build.SourcesDirectory)\release_arm64

# Download NetStandard2.0 
    - task: DownloadPipelineArtifact@2
      displayName: Download NetStandard 2.0
      inputs:
        artifactName: netstandard2.0
        itemPattern: ''
        targetPath: $(Build.SourcesDirectory)\netstandard2.0

# Download Net6.0
    - task: DownloadPipelineArtifact@2
      displayName: 'Download Net6.0'
      inputs:
        artifactName: net6.0
        itemPattern: ''
        targetPath: $(Build.SourcesDirectory)\net6.0

# Download Net8.0
    - task: DownloadPipelineArtifact@2
      displayName: 'Download Net8.0'
      inputs:
        artifactName: net8.0
        itemPattern: ''
        targetPath: $(Build.SourcesDirectory)\net8.0

# Stage Binaries
    - task: CmdLine@2
      displayName: Stage Binaries
      inputs:
        workingDirectory: $(Build.SourcesDirectory)
        script: |
          copy release_x86\cswinrt.exe cswinrt.exe
          copy release_x86\WinRT.Interop.winmd WinRT.Interop.winmd

# ESRP Codesigning
    - task: EsrpCodeSigning@5
      displayName: ESRP CodeSigning
      inputs:
        ConnectedServiceName: $(SigningServiceName)
        AppRegistrationClientId: $(SigningAppId)
        AppRegistrationTenantId: $(SigningTenantId)
        AuthAKVName: $(SigningAKVName)
        AuthCertName: $(SigningAuthCertName)
        AuthSignCertName: $(SigningSignCertName)
        FolderPath: $(Build.SourcesDirectory)
        Pattern: |
          cswinrt.exe
          WinRT.Interop.winmd
          netstandard2.0\WinRT.Runtime.dll
          netstandard2.0\WinRT.Host.Shim.dll
          netstandard2.0\WinRT.SourceGenerator.dll
          net6.0\WinRT.Host.Shim.dll
          net6.0\WinRT.Runtime.dll
          net8.0\WinRT.Runtime.dll
          release_x64\WinRT.Host.dll
          release_x64\WinRT.Host.dll.mui
          release_x86\WinRT.Host.dll
          release_x86\WinRT.Host.dll.mui
          release_arm64\WinRT.Host.dll
          release_arm64\WinRT.Host.dll.mui
          net6.0\IIDOptimizer\IIDOptimizer.exe
          net6.0\IIDOptimizer\IIDOptimizer.dll
          net6.0\CsWinMD\CsWinMD.exe
          net6.0\CsWinMD\CsWinMD.dll
        UseMinimatch: true
        signConfigType: inlineSignParams
        inlineOperation: |
          [
            {
              "keyCode": "CP-230012",
              "operationSetCode": "SigntoolSign",
                "parameters": [
                {
                  "parameterName": "OpusName",
                  "parameterValue": "Microsoft"
                },
                {
                  "parameterName": "OpusInfo",
                  "parameterValue": "http://www.microsoft.com"
                },
                {
                  "parameterName": "PageHash",
                  "parameterValue": "/NPH"
                },
                {
                  "parameterName": "FileDigest",
                  "parameterValue": "/fd sha256"
                },
                {
                  "parameterName": "TimeStamp",
                  "parameterValue": "/tr \"http://rfc3161.gtm.corp.microsoft.com/TSS/HttpTspServer\" /td sha256"
                }
              ],
              "toolName": "signtool.exe",
              "toolVersion": "6.2.9304.0"
            }
          ]

# ESRP CodeSigning 3rd Party
    - task: EsrpCodeSigning@5
      displayName: ESRP CodeSigning 3rd party
      continueOnError: True
      inputs:
        ConnectedServiceName: $(SigningServiceName)
        AppRegistrationClientId: $(SigningAppId)
        AppRegistrationTenantId: $(SigningTenantId)
        AuthAKVName: $(SigningAKVName)
        AuthCertName: $(SigningAuthCertName)
        AuthSignCertName: $(SigningSignCertName)
        FolderPath: $(Build.SourcesDirectory)
        Pattern: |
          net6.0\IIDOptimizer\Mono.Cecil.dll
          net6.0\IIDOptimizer\Mono.Cecil.Mdb.dll
          net6.0\IIDOptimizer\Mono.Cecil.Pdb.dll
          net6.0\IIDOptimizer\Mono.Cecil.Rocks.dll
        UseMinimatch: true
        signConfigType: inlineSignParams
        inlineOperation: |
          [
            {
                "KeyCode" : "CP-231522",
                "OperationCode" : "SigntoolSign",
                "Parameters" : {
                    "OpusName" : "Microsoft",
                    "OpusInfo" : "http://www.microsoft.com",
                    "Append" : "/as",
                    "FileDigest" : "/fd \"SHA256\"",
                    "PageHash" : "/NPH",
                    "TimeStamp" : "/tr \"http://rfc3161.gtm.corp.microsoft.com/TSS/HttpTspServer\" /td sha256"
                },
                "ToolName" : "sign",
                "ToolVersion" : "1.0"
            },
            {
                "KeyCode" : "CP-231522",
                "OperationCode" : "SigntoolVerify",
                "Parameters" : {},
                "ToolName" : "sign",
                "ToolVersion" : "1.0"
            }
          ]

# Parse Versions
    - task: CmdLine@2
      displayName: Parse Versions
      inputs:
        workingDirectory: $(Build.SourcesDirectory)
        script: |
          rem Parse the build-generated Build.BuildNumber into components that 
          rem can be recombined for version resources, nuget packages, etc.
   
          @echo off
   
          rem Encode the build date/rev into a 16 bit value for resource versions
          if "$(PrereleaseVersion)"=="" (
            set RevisionBase=30000
          ) else (
            set RevisionBase=0
          )
          for /f "tokens=4,5 delims=." %%i in ("$(Build.BuildNumber)") do set BuildMetadata=%%i.%%j & set /a BuildRevision=%RevisionBase%+(((%%i/10000)-20)*366+((%%i)%%10000)/100*31+((%%i)%%100))*10+%%j
   
          set VersionNumber=$(MajorVersion).$(MinorVersion).$(PatchVersion).%BuildRevision%
   
          if "$(PrereleaseVersion)"=="" (
            set NugetVersion=$(MajorVersion).$(MinorVersion).$(PatchVersion)
          ) else (
            set NugetVersion=$(Build.BuildNumber)
          )
   
          rem Export generated version numbers back for subsequent tasks
          echo ##vso[task.setvariable variable=BuildMetadata;]%BuildMetadata%
          echo ##vso[task.setvariable variable=BuildRevision;]%BuildRevision%
          echo ##vso[task.setvariable variable=VersionNumber;]%VersionNumber%
          echo ##vso[task.setvariable variable=NugetVersion;]%NugetVersion%
   
# NuGet Pack
    - task: NuGetCommand@2
      displayName: NuGet pack
      inputs:
        command: pack
        searchPatternPack: nuget/Microsoft.Windows.CsWinRT.nuspec
        configurationToPack: Release
        buildProperties: cswinrt_nuget_version=$(NugetVersion);cswinrt_exe=$(Build.SourcesDirectory)\cswinrt.exe;interop_winmd=$(Build.SourcesDirectory)\WinRT.Interop.winmd;netstandard2_runtime=$(Build.SourcesDirectory)\netstandard2.0\WinRT.Runtime.dll;net6_runtime=$(Build.SourcesDirectory)\net6.0\WinRT.Runtime.dll;net8_runtime=$(Build.SourcesDirectory)\net8.0\WinRT.Runtime.dll;source_generator=$(Build.SourcesDirectory)\netstandard2.0\WinRT.SourceGenerator.dll;winrt_shim=$(Build.SourcesDirectory)\net6.0\WinRT.Host.Shim.dll;winrt_host_x86=$(Build.SourcesDirectory)\release_x86\WinRT.Host.dll;winrt_host_x64=$(Build.SourcesDirectory)\release_x64\WinRT.Host.dll;winrt_host_arm64=$(Build.SourcesDirectory)\release_arm64\WinRT.Host.dll;winrt_host_resource_x86=$(Build.SourcesDirectory)\release_x86\WinRT.Host.dll.mui;winrt_host_resource_x64=$(Build.SourcesDirectory)\release_x64\WinRT.Host.dll.mui;winrt_host_resource_arm64=$(Build.SourcesDirectory)\release_arm64\WinRT.Host.dll.mui;guid_patch=$(Build.SourcesDirectory)\net6.0\IIDOptimizer\*.*

    - task: NuGetCommand@2
      displayName: NuGet pack
      condition: eq(variables['_PublishCsWinMD'], 'true')
      inputs:
        command: pack
        searchPatternPack: nuget/Microsoft.Windows.CsWinMD.nuspec
        configurationToPack: Release
        buildProperties: cswinmd_nuget_version=$(NugetVersion);cswinmd_outpath=$(Build.SourcesDirectory)\net6.0\CsWinMD;source_generator=$(Build.SourcesDirectory)\netstandard2.0\WinRT.SourceGenerator.dll

# ESRP CodeSigning 
    - task: EsrpCodeSigning@5
      displayName: ESRP CodeSigning
      inputs:
        ConnectedServiceName: $(SigningServiceName)
        AppRegistrationClientId: $(SigningAppId)
        AppRegistrationTenantId: $(SigningTenantId)
        AuthAKVName: $(SigningAKVName)
        AuthCertName: $(SigningAuthCertName)
        AuthSignCertName: $(SigningSignCertName)
        FolderPath: $(Build.ArtifactStagingDirectory)
        Pattern: '*.nupkg'
        signConfigType: inlineSignParams
        inlineOperation: |
          [
            {
              "KeyCode" : "CP-401405",
              "OperationCode" : "NuGetSign",
              "Parameters" : {},
              "ToolName" : "sign",
              "ToolVersion" : "1.0"
            },
            {
              "KeyCode" : "CP-401405",
              "OperationCode" : "NuGetVerify",
              "Parameters" : {},
              "ToolName" : "sign",
              "ToolVersion" : "1.0"
            }
          ]

# Publish Symbols
    - task: PublishSymbols@2
      displayName: Publish Symbols
      inputs:
        SearchPattern: '**/*.pdb'
        IndexSources: false
        SymbolServerType: TeamServices
        SymbolsProduct: C#/WinRT

# NuGet push and publish
    templateContext:
      outputs:
      - output: nuget
        displayName: 'NuGet push'
        packagesToPush: $(Build.ArtifactStagingDirectory)/**/*.nupkg
        packageParentPath: '$(Build.ArtifactStagingDirectory)'
        publishVstsFeed: CsWinRT
        nuGetFeedType: internal
      - output: pipelineArtifact
        displayName: 'NuGet publish'
        targetPath: $(Build.ArtifactStagingDirectory)
        artifactName: Publish        
