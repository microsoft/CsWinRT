stages:
- stage: LocalizeStrings
  displayName: Call TDBuild to Localize Resources
  jobs:
  - job: Localize
    pool: 
      vmImage: windows-2022
    timeoutInMinutes: 90
    steps:
    - checkout: self
      clean: true
      persistCredentials: true

    # This is needed to avoid credentials errors for later in the TDBuild Task
    - script: |
        git config --global user.email "DoNotEmailThis@dev.null.microsoft.com"
        git config --global user.name "TDBuild"

    # Download x64
    - task: DownloadBuildArtifacts@0
      displayName: Download x64
      inputs:
        artifactName: release_x64
        itemPattern: ''
        downloadPath: $(Build.SourcesDirectory)
        extractTars: false

    # Download RESX
    - task: DownloadBuildArtifacts@0
      displayName: Download ResX
      inputs:
        artifactName: ResX
        itemPattern: ''
        downloadPath: $(Build.SourcesDirectory)
        extractTars: false

    # Run TouchdownBuild
    - task: TouchdownBuildTask@1
      inputs:
        environment: 'PRODEXT'
        teamId: $(CsWinRTTDBuildTeamID)
        authType: 'OAuth'
        authId: $(CsWinRTTDBuildAuthID)
        authKey: $(CsWinRTTDBuildAuthKey)
        localizationTarget: true
        isPreview: false
        resourceFilePath: |
          $(Build.SourcesDirectory)\release_x64\WinRT.Host.dll.mui
          $(Build.SourcesDirectory)\ResX\WinRT.SourceGenerator\CsWinRTDiagnosticStrings.resx
          $(Build.SourcesDirectory)\ResX\WinRT.Runtime\WinRTRuntimeErrorStrings.resx
        outputDirectoryRoot: $(LocOutputDir) 
        appendRelativeDir: true
        cultureMappingType: 'None'
        gitAction: NONE 

    # Sign TDBuild Output
    - task: EsrpCodeSigning@1
      displayName: ESRP CodeSigning
      inputs:
        ConnectedServiceName: 81cc6790-027c-4ef3-928d-65e8b96a691a
        FolderPath: $(LocOutputDir)
        Pattern: |
          release_x64\de-DE\WinRT.Host.dll.mui
          release_x64\es-ES\WinRT.Host.dll.mui
          release_x64\fr-FR\WinRT.Host.dll.mui
          release_x64\it-IT\WinRT.Host.dll.mui
          release_x64\ja-JP\WinRT.Host.dll.mui
          release_x64\ko-KR\WinRT.Host.dll.mui
          release_x64\pt-BR\WinRT.Host.dll.mui
          release_x64\ru-RU\WinRT.Host.dll.mui
          release_x64\zh-CN\WinRT.Host.dll.mui
          release_x64\zh-TW\WinRT.Host.dll.mui
        UseMinimatch: true
        signConfigType: inlineSignParams
        inlineOperation: |
          [
            {
              "keyCode": "CP-230012",
              "operationSetCode": "SigntoolSign",
                "parameters": [
                {
                  "parameterName": "OpusName",
                  "parameterValue": "Microsoft"
                },
                {
                  "parameterName": "OpusInfo",
                  "parameterValue": "http://www.microsoft.com"
                },
                {
                  "parameterName": "PageHash",
                  "parameterValue": "/NPH"
                },
                {
                  "parameterName": "FileDigest",
                  "parameterValue": "/fd sha256"
                },
                {
                  "parameterName": "TimeStamp",
                  "parameterValue": "/tr \"http://rfc3161.gtm.corp.microsoft.com/TSS/HttpTspServer\" /td sha256"
                }
              ],
              "toolName": "signtool.exe",
              "toolVersion": "6.2.9304.0"
            }
          ]


    # Stage TDBuild Output
    - task: CopyFiles@2
      displayName: Stage TouchdownBuild Output
      condition: succeeded()
      inputs:
        SourceFolder: $(LocOutputDir)
        TargetFolder: $(Build.ArtifactStagingDirectory)\loc

    # Publish TDBuild Output
    - task: PublishBuildArtifacts@1
      displayName: Publish TouchdownBuild Output
      condition: succeeded()
      inputs:
        PathtoPublish: $(Build.ArtifactStagingDirectory)\loc
        ArtifactName: LocalizedResources