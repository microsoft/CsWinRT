parameters: 
  - name: "BuildConfiguration"
    type: string
  - name: "BuildPlatform"
    type: string
  - name: "FunctionalTests"
    type: object
    default: 
    - JsonValueFunctionCalls
    - ClassActivation
    - Structs
    - Events
    - DynamicInterfaceCasting
    - Collections
    - Async
    - DerivedClassActivation
    - DerivedClassAsBaseClass
    - CCW

steps:
  - ${{ if eq(${{ parameters.BuildPlatform }}, 'x86') }}:
    - task: CmdLine@2
      displayName: Run2 ${{ parameters.BuildPlatform }} for ${{ parameters.BuildConfiguration }} 
      condition: succeeded()
      continueOnError: True
      inputs:
        workingDirectory: $(Build.SourcesDirectory)\src\
        script: |
          dir

  - ${{ each functionalTest in parameters.FunctionalTests }}:
    - ${{ if eq(parameters.BuildPlatform, 'x86') }}:
      - task: MSBuild@1
        displayName: Publish ${{ functionalTest }} trimmed (net6.0)
        condition: succeeded()
        inputs:
          solution: $(Build.SourcesDirectory)\src\Tests\FunctionalTests\${{ functionalTest }}\${{ functionalTest }}.csproj
          msbuildArguments: /restore /t:publish /p:CIBuildReason=CI,RuntimeIdentifier=win-$(BuildPlatform),TargetFramework=net6.0,solutiondir=$(Build.SourcesDirectory)\src,VersionNumber=$(VersionNumber),VersionString=$(Build.BuildNumber),AssemblyVersionNumber=$(WinRT.Runtime.AssemblyVersion),GenerateTestProjection=true,CleanIntermediateDirs=true,AllowedReferenceRelatedFileExtensions=".xml;.pri;.dll.config;.exe.config"
          platform: $(BuildPlatform)
          configuration: $(BuildConfiguration)

      - task: CmdLine@2
        displayName: Run ${{ functionalTest }} trimmed (net6.0)
        condition: succeeded()
        continueOnError: True
        inputs:
          workingDirectory: $(Build.SourcesDirectory)\src\Tests\FunctionalTests\${{ functionalTest }}\bin\$(BuildConfiguration)\net6.0\win-$(BuildPlatform)\publish
          script: |
            dir
            ${{ functionalTest }}.exe 
            if !Errorlevel! NEQ 100 (
              exit /b !ErrorLevel!
            )
            exit /b 0 

    - ${{ if and(eq(parameters.BuildConfiguration, 'release'), eq(parameters.BuildPlatform, 'x64')) }}:
      - task: MSBuild@1
        displayName: Publish ${{ functionalTest }} for AOT (net8.0)
        condition: succeeded()
        inputs:
          solution: $(Build.SourcesDirectory)\src\Tests\FunctionalTests\${{ functionalTest }}\${{ functionalTest }}.csproj
          msbuildArguments: /restore /t:publish /p:CIBuildReason=CI,RuntimeIdentifier=win-$(BuildPlatform),TargetFramework=net8.0,solutiondir=$(Build.SourcesDirectory)\src,VersionNumber=$(VersionNumber),VersionString=$(Build.BuildNumber),AssemblyVersionNumber=$(WinRT.Runtime.AssemblyVersion),GenerateTestProjection=true,CleanIntermediateDirs=true,AllowedReferenceRelatedFileExtensions=".xml;.pri;.dll.config;.exe.config"
          platform: $(BuildPlatform)
          configuration: $(BuildConfiguration)

      - task: CmdLine@2
        displayName: Run ${{ functionalTest }} for AOT (net8.0)
        condition: succeeded()
        continueOnError: True
        inputs:
          workingDirectory: $(Build.SourcesDirectory)\src\Tests\FunctionalTests\${{ functionalTest }}\bin\$(BuildConfiguration)\net8.0\win-$(BuildPlatform)\publish
          script: |
            dir
            ${{ functionalTest }}.exe 
            if !Errorlevel! NEQ 100 (
              exit /b !ErrorLevel!
            )
            exit /b 0 
