<Project ToolsVersion="14.0" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">

  <PropertyGroup>
    <!--Work around WinUI assumption that client requires building PRI, etc -->
    <MsAppxPackageTargets>$(MSBuildProjectDirectory)/DoNotImport_MsAppxPackageTargets.targets</MsAppxPackageTargets>
    <PrepareForRunDependsOn>CopyTestAssets;$(PrepareForRunDependsOn)</PrepareForRunDependsOn>
  </PropertyGroup>

  <!--Work around for VS limitation - project reference from Desktop to UWP:
      https://developercommunity.visualstudio.com/idea/1128228/a-reference-cannot-be-added-because-the-two-projec.html
  -->
  <ItemGroup>
    <ProjectReference Include="..\TestComponentCSharp\TestComponentCSharp.vcxproj" />
  </ItemGroup>
  
  <Target Name="CopyTestAssets">
    <Copy SourceFiles="
            $(BuildOutDir)WinRT.Host\bin\WinRT.Host.dll;
            $(BuildOutDir)WinRT.Host\bin\WinRT.Host.dll;
            $(BuildOutDir)WinRT.Host\bin\WinRT.Host.dll;
            $(BuildOutDir)WinRT.Host\bin\WinRT.Host.dll;
            $(BuildOutDir)WinRT.Host\bin\WinRT.Host.dll;
            $(BuildOutDir)WinRT.Host\bin\WinRT.Host.dll;
            $(SolutionDir)Projections\Test\bin\$(BuildPlatform)\$(Configuration)\net5.0\Test.dll" 
          DestinationFiles="
            $(OutDir)WinRT.Host.dll;
            $(OutDir)Test.Host.dll;
            $(OutDir)MappedTarget.Host.dll;
            $(OutDir)ClassNotFound.Host.dll;
            $(OutDir)BadRuntimeConfig.Host.dll;
            $(OutDir)NoRuntimeConfig.Host.dll;
            $(OutDir)TestComponentCSharp.ManagedClass.dll" 
          UseHardlinksIfPossible="false" SkipUnchangedFiles="true" />
  </Target>  
  
  <Import Project="$([MSBuild]::GetPathOfFileAbove('Directory.Build.targets', '$(MSBuildThisFileDirectory)../'))" />

</Project>
