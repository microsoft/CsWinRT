<Project ToolsVersion="15.0" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">

  <PropertyGroup>
    <!--Work around WinUI assumption that client requires building PRI, etc -->
    <MsAppxPackageTargets>$(MSBuildProjectDirectory)/DoNotImport_MsAppxPackageTargets.targets</MsAppxPackageTargets>
    <PrepareForRunDependsOn>UpdateConfigFiles;CopyTestAssets;$(PrepareForRunDependsOn)</PrepareForRunDependsOn>
  </PropertyGroup>

  <UsingTask TaskName="UpdateConfigFiles"
      TaskFactory="RoslynCodeTaskFactory"
      AssemblyFile="$(MSBuildToolsPath)\Microsoft.Build.Tasks.Core.dll" >
    <ParameterGroup>
      <ConfigFiles ParameterType="System.String[]" Required="true" />
      <RuntimeFrameworkVersion ParameterType="System.String" Required="true" />
    </ParameterGroup>
    <Task>
      <Using Namespace="System" />
      <Using Namespace="System.IO" />
      <Using Namespace="System.Text.RegularExpressions" />
      <Code Type="Fragment" Language="cs">
        <![CDATA[
          foreach(String ConfigFile in ConfigFiles)  
          {  
            File.WriteAllText(
              ConfigFile,
              Regex.Replace(
                File.ReadAllText(ConfigFile), 
                "RuntimeFrameworkVersion", 
                RuntimeFrameworkVersion)
            );
          }
        ]]>
      </Code>
    </Task>
  </UsingTask>

  <!--Update runtimconfig.json files with current RuntimeFrameworkVersion-->
  <Target Name="UpdateConfigFiles">
    <MSBuild Projects="RuntimeFrameworkVersion.csproj" Targets="GetRuntimeFrameworkVersion">
      <Output TaskParameter="TargetOutputs" ItemName="RuntimeFrameworkVersion" />
    </MSBuild>
    <ItemGroup>
      <ConfigFiles Include="$(OutDir)*.runtimeconfig.json"/>
    </ItemGroup>
    <UpdateConfigFiles ConfigFiles="@(ConfigFiles)" RuntimeFrameworkVersion="@(RuntimeFrameworkVersion)"/>
  </Target>  
  
  <!--Rename host/test dlls for various tests (requires disabling hardlinks)-->
  <Target Name="CopyTestAssets">
    <Copy SourceFiles="
            $(BuildOutDir)WinRT.Host\bin\WinRT.Host.dll;
            $(BuildOutDir)WinRT.Host\bin\WinRT.Host.dll;
            $(BuildOutDir)WinRT.Host\bin\WinRT.Host.dll;
            $(BuildOutDir)WinRT.Host\bin\WinRT.Host.dll;
            $(BuildOutDir)WinRT.Host\bin\WinRT.Host.dll;
            $(BuildOutDir)WinRT.Host\bin\WinRT.Host.dll;
            $(BuildOutDir)WinRT.Host\bin\WinRT.Host.dll;
            $(SolutionDir)Projections\Test\bin\$(BuildPlatform)\$(Configuration)\net5.0\Test.dll" 
          DestinationFiles="
            $(OutDir)WinRT.Host.dll;
            $(OutDir)Test.Host.dll;
            $(OutDir)MappedTarget.Host.dll;
            $(OutDir)ClassNotFound.Host.dll;
            $(OutDir)BadMappedTarget.Host.dll;
            $(OutDir)NoRuntimeConfig.Host.dll;
            $(OutDir)RuntimeNotFound.Host.dll;
            $(OutDir)TestHost.ManagedClass.dll" 
          UseHardlinksIfPossible="false" SkipUnchangedFiles="true" />
  </Target>  
  
  <Import Project="$([MSBuild]::GetPathOfFileAbove('Directory.Build.targets', '$(MSBuildThisFileDirectory)../'))" />

</Project>
