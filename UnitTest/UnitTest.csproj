<Project Sdk="Microsoft.NET.Sdk">

  <PropertyGroup>
    <!--Target .NET Core 2.0 to test .NET Standard 2.0 projection -->
    <TargetFrameworks>netcoreapp2.0;net5.0</TargetFrameworks>
    <IsPackable>false</IsPackable>
    <Platforms>AnyCPU;x64;x86</Platforms>
    <RunPostBuildEvent>Always</RunPostBuildEvent>
    <ProjectName>UnitTest</ProjectName>
    <LangVersion>8</LangVersion>
    <AllowUnsafeBlocks>true</AllowUnsafeBlocks>
    <NoWarn>1701;1702;0436;1658</NoWarn>
  </PropertyGroup>

  <ItemGroup>
    <ProjectReference Include="..\Projections\Windows\Windows.csproj" />
    <ProjectReference Include="..\Projections\WinUI\WinUI.csproj" />
    <ProjectReference Include="..\Projections\Test\Test.csproj" />
    <PackageReference Include="Microsoft.NET.Test.Sdk" Version="16.0.1" />
    <PackageReference Include="Microsoft.VCRTForwarders.140" Version="1.0.6" />
    <PackageReference Include="xunit" Version="2.4.1" />
    <PackageReference Include="xunit.runner.console" Version="2.4.1">
      <PrivateAssets>all</PrivateAssets>
      <IncludeAssets>runtime; build; native; contentfiles; analyzers; buildtransitive</IncludeAssets>
    </PackageReference>
    <PackageReference Include="xunit.runner.visualstudio" Version="2.4.3">
      <PrivateAssets>all</PrivateAssets>
      <IncludeAssets>runtime; build; native; contentfiles; analyzers; buildtransitive</IncludeAssets>
    </PackageReference>
    <PackageReference Include="XunitXml.TestLogger" Version="2.1.26" />
    <PackageReference Include="System.Memory" Version="4.5.4" />
  </ItemGroup>

  <ItemGroup Condition="'$(TargetFramework)' == 'netcoreapp2.0'">
    <Compile Remove="**/*.net5.cs" />
    <None Include="**/*.net5.cs" />
  </ItemGroup>

  <ItemGroup Condition="'$(TargetFramework)' == 'netcoreapp5.0'">
    <Compile Remove="**/*.netcoreapp2.0.cs" />
    <None Include="**/*.netcoreapp2.0.cs" />
  </ItemGroup>

  <Target Name="FilterProjection" BeforeTargets="CoreCompile">
    <ItemGroup>
      <!--Remove references to projection source winmds to prevent compile conflict warnings-->
      <ReferencePathWithRefAssemblies Remove="@(ReferencePathWithRefAssemblies)" Condition="%(ReferencePathWithRefAssemblies.Filename) == 'TestComponent'" />
      <ReferencePathWithRefAssemblies Remove="@(ReferencePathWithRefAssemblies)" Condition="%(ReferencePathWithRefAssemblies.Filename) == 'TestComponentCSharp'" />
    </ItemGroup>
    <!--Remove Microsoft.UI.winmd;Microsoft.System.winmd;Microsoft.Graphics.winmd
        from deps.json to prevent CLR failing unit test-->
    <ItemGroup>
      <WinmdReferenceDependencyPaths Include="@(ReferenceDependencyPaths)" Condition="%(ReferenceDependencyPaths.Extension) == '.winmd'" />
    </ItemGroup>
    <Message Importance="high" Condition="'@(WinmdReferenceDependencyPaths)' != ''" Text="WinmdReferenceDependencyPaths: @(WinmdReferenceDependencyPaths)" />
    <ItemGroup>
        <ReferenceDependencyPaths Remove="@(WinmdReferenceDependencyPaths)"/>
    </ItemGroup>
  </Target>

  <Target Name="RemoveWinMDReferences" BeforeTargets="ResolveReferences" AfterTargets="AfterResolveReferences">
    <!--Remove TestComponent.winmd;TestComponentCSharp.winmd 
        to avoid NETSDK1130 target error-->
    <ItemGroup>
      <WinmdReferencePath Include="@(ReferencePath)" Condition="'%(ReferencePath.WinMDFile)' == 'true'" />
    </ItemGroup>
    <Message Importance="high" Condition="'@(WinmdReferencePath)' != ''" Text="WinmdReferencePath: @(WinmdReferencePath)" />
    <ItemGroup>
      <ReferencePath Remove="@(WinmdReferencePath)"/>
    </ItemGroup>
  </Target>

</Project>
