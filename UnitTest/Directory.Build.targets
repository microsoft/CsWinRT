<!--NOTE: Directory.Build.* files are temporary until C#/WinRT nuget contains msbuild support-->
<Project ToolsVersion="14.0" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">

  <PropertyGroup>
    <GenerateTestProjection Condition="'$(GenerateTestProjection)$(Configuration)' == 'Release'">$(IsCrossTargetingBuild)</GenerateTestProjection>
  </PropertyGroup>

  <ItemGroup>
    <Content Include="xunit.runner.json" CopyToOutputDirectory="PreserveNewest" />
  </ItemGroup>
  
  <Target Name="CopyTestComponent" BeforeTargets="CopyFilesToOutputDirectory">
    <ItemGroup>
      <Content Include="
                $(BuildOutDir)TestComponent\bin\TestComponent.dll;
                $(BuildOutDir)TestComponent\bin\TestComponent.pdb;
                $(BuildOutDir)TestComponentCSharp\bin\TestComponentCSharp\TestComponentCSharp.dll;
                $(BuildOutDir)TestComponentCSharp\bin\TestComponentCSharp\TestComponentCSharp.pdb"
               CopyToOutputDirectory="PreserveNewest" />
    </ItemGroup>
  </Target>

  <Target Name="GenerateProjection" BeforeTargets="DispatchToInnerBuilds;Build" Condition="'$(GenerateTestProjection)' == 'true'">
    <PropertyGroup>
      <!--PkgMicrosoft_WinUI is set in in obj\*.csproj.nuget.g.props with TargetFramework condition, doesn't support multi-targeting-->
      <PkgMicrosoft_WinUI Condition="'$(PkgMicrosoft_WinUI)'==''">$(NuGetPackageFolders)microsoft.winui\$(MicrosoftWinUIVersion)</PkgMicrosoft_WinUI>
    </PropertyGroup>
    <ItemGroup>
      <!--PkgMicrosoft_WinUI is defined by Nuget reference-->
      <WinUIWinMDs Include="$(PkgMicrosoft_WinUI)/**/*.winmd" />
    </ItemGroup>
    <ItemGroup>
      <UnitTestWinMDs Include="$(BuildOutDir)TestComponent\bin\TestComponent.winmd " />
      <UnitTestWinMDs Include="$(BuildOutDir)TestComponentCSharp\bin\TestComponentCSharp\TestComponentCSharp.winmd" />
    </ItemGroup>
    <PropertyGroup>
      <CsWinRTVerbosity>high</CsWinRTVerbosity>
      <CsWinRTResponseFile>$(IntermediateOutputPath)cswinrt_unittest.rsp</CsWinRTResponseFile>
      <CsWinRTCommand>$(CsWinrtExe) %40"$(CsWinRTResponseFile)"</CsWinRTCommand>
    </PropertyGroup>
    <PropertyGroup>
      <CsWinRTParams>
-verbose
-in 10.0.18362.0
-in @(WinUIWinMDs->'"%(FullPath)"', ' ')
-in @(UnitTestWinMDs->'"%(FullPath)"', ' ')
-out "$(ProjectDir)Generated Files"
-include TestComponentCSharp 
-include TestComponent
-include Windows.Foundation 
-include Windows.UI.Xaml.Interop
-include Windows.UI.Color
-include Microsoft.UI.Xaml.CornerRadius
-include Microsoft.UI.Xaml.Duration
-include Microsoft.UI.Xaml.DurationType
-include Microsoft.UI.Xaml.GridLength
-include Microsoft.UI.Xaml.GridUnitType
-include Microsoft.UI.Xaml.Thickness
-include Microsoft.UI.Xaml.Controls.Primitives.GeneratorPosition
-include Microsoft.UI.Xaml.Media.Matrix
-exclude Microsoft.UI.Xaml.Media.MatrixTransform
-exclude Microsoft.UI.Xaml.Media.Matrix3DProjection
-include Microsoft.UI.Xaml.Media.Animation.KeyTime
-include Microsoft.UI.Xaml.Media.Animation.RepeatBehavior
-include Microsoft.UI.Xaml.Media.Animation.RepeatBehaviorType
-include Microsoft.UI.Xaml.Media.Media3D.Matrix3D
-exclude Windows.Foundation.Diagnostics 
# Exclude types per Microsoft.Windows.SDK.WinUI.Contracts NuGet
-exclude Windows.UI.Colors
-exclude Windows.UI.IColors
-exclude Windows.UI.ColorHelper
-exclude Windows.UI.IColorHelper
      </CsWinRTParams>
    </PropertyGroup>
    <WriteLinesToFile
        File="$(CsWinRTResponseFile)" Lines="$(CsWinRTParams)"
        Overwrite="true" WriteOnlyWhenDifferent="true" />
    <Message Text="$(CsWinRTCommand)" Importance="$(CsWinRTVerbosity)" />
    <Exec Command="$(CsWinRTCommand)" />
  </Target>

  <Target Name="IncludeProjection" BeforeTargets="CoreCompile" AfterTargets="GenerateProjection">
    <ItemGroup>
      <Compile Include="$(ProjectDir)Generated Files/*.cs" Exclude="@(Compile)" />
    </ItemGroup>
  </Target>

  <Import Project="$([MSBuild]::GetPathOfFileAbove('Directory.Build.targets', '$(MSBuildThisFileDirectory)../'))" />

</Project>
