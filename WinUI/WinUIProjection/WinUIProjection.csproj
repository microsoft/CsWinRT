<Project Sdk="Microsoft.NET.Sdk">

  <PropertyGroup>
    <TargetFramework>net5.0</TargetFramework>
    <Platforms>x64;x86</Platforms>
    <TargetPlatformVersion>10.0.18362.0</TargetPlatformVersion>
    <CsWinrtExe Condition="'$(CsWinrtPath)'!=''">$(CsWinrtPath)cswinrt.exe</CsWinrtExe>
  </PropertyGroup>

  <PropertyGroup>
    <GenerateTestProjection Condition="'$(GenerateTestProjection)$(Configuration)' == 'Release'">true</GenerateTestProjection>
    <AllowUnsafeBlocks>true</AllowUnsafeBlocks>
    <NoWarn>8305;0618</NoWarn>
  </PropertyGroup>
  
  <ItemGroup>
    <ProjectReference Include="..\..\WinRT.Runtime\WinRT.Runtime.csproj" />
    <ProjectReference Include="..\..\cswinrt\cswinrt.vcxproj" />

    <!-- Exclude compile and build time assets so we don't think we're building a real WinUI App -->
    <PackageReference Include="Microsoft.WinUI" Version="$(MicrosoftWinUIVersion)" GeneratePathProperty="true">
      <ExcludeAssets>compile; build</ExcludeAssets>
    </PackageReference>
    
    <!-- For WinRTModule-->
    <InternalsVisibleTo Include="WinUITest" />
  </ItemGroup>

  <Target Name="GenerateWinUIProjection" BeforeTargets="CoreCompile" Condition="'$(GenerateTestProjection)' == 'true'">
    <ItemGroup>
      <!--PkgMicrosoft_WinUI is defined by Nuget reference-->
      <WinUIWinMDs Include="$(PkgMicrosoft_WinUI)/**/*.winmd" />
    </ItemGroup>
    <PropertyGroup>
      <CsWinRTVerbosity>high</CsWinRTVerbosity>
      <CsWinRTResponseFile>$(IntermediateOutputPath)cswinrt_platform.rsp</CsWinRTResponseFile>
      <CsWinRTCommand>$(CsWinrtExe) %40"$(CsWinRTResponseFile)"</CsWinRTCommand>
    </PropertyGroup>
    <PropertyGroup>
      <CsWinRTParams>
-verbose
-in 10.0.18362.0
-in @(WinUIWinMDs->'"%(FullPath)"', ' ')
-out "$(ProjectDir)Generated Files"
-include Microsoft
-include Windows
# Exclude causality types colliding with those in System.Private.CoreLib.dll
-exclude Windows.Foundation.Diagnostics 
# Exclude Windows.UI, Windows.UI.Text, Windows.UI.Xaml per Microsoft.Windows.SDK.WinUI.Contracts NuGet
-exclude Windows.UI.Colors
-exclude Windows.UI.IColors
-exclude Windows.UI.ColorHelper
-exclude Windows.UI.IColorHelper
#-exclude Windows.UI.Text (see below: must include Windows.UI.Text to workaround WinUI nuget issues)
-exclude Windows.UI.Xaml
-exclude Windows.ApplicationModel.Store.Preview
# Allow Windows.UI.Text, Windows.UI.Xaml types used in other namespaces
-include Windows.UI.Text.FontStretch
-include Windows.UI.Text.FontStyle
-include Windows.UI.Text.FontWeight
-include Windows.UI.Text.UnderlineType
# The current WinUI nuget incorrectly references several Windows.* types that should be
# Microsoft.* types instead.  Temporarily include these to enable the build
-include Windows.UI.Xaml.Interop.Type
-include Windows.UI.Xaml.Interop.NotifyCollectionChangedAction
-include Windows.UI.Xaml.Markup.ContentPropertyAttribute
-include Windows.UI.Xaml.StyleTypedPropertyAttribute
-include Windows.UI.Xaml.TemplatePartAttribute
-include Windows.UI.Xaml.TemplateVisualStateAttribute
-include Windows.UI.Xaml.Data.BindableAttribute
-include Windows.UI.Xaml.Markup.ContentPropertyAttribute
-include Windows.UI.Xaml.Markup.FullXamlMetadataProviderAttribute
-include Windows.UI.Xaml.Markup.MarkupExtensionReturnTypeAttribute
-include Windows.UI.Xaml.Media.Animation.ConditionallyIndependentlyAnimatableAttribute
-include Windows.UI.Xaml.Media.Animation.IndependentlyAnimatableAttribute
-include Windows.UI.Xaml.Media.Animation.ConditionallyIndependentlyAnimatableAttribute
      </CsWinRTParams>
    </PropertyGroup>
    <MakeDir Directories="$(ProjectDir)Generated Files" />
    <WriteLinesToFile File="$(CsWinRTResponseFile)" Lines="$(CsWinRTParams)" Overwrite="true" WriteOnlyWhenDifferent="true" />
    <Message Text="$(CsWinRTCommand)" Importance="$(CsWinRTVerbosity)" />
    <Exec Command="$(CsWinRTCommand)" />
  </Target>

  <ItemGroup>
    <ReferenceCopyLocalPaths Include="$(PkgMicrosoft_WinUI)/runtimes/win10-$(Platform)/native/*.dll" />
    <ReferenceCopyLocalPaths Include="$(PkgMicrosoft_WinUI)/runtimes/win10-$(Platform)/native/**/*.mui">
      <DestinationSubDirectory>%(RecursiveDir)</DestinationSubDirectory>
    </ReferenceCopyLocalPaths>
  </ItemGroup>
  <Target Name="IncludeWinUIProjection" BeforeTargets="CoreCompile" AfterTargets="GenerateWinUIProjection">
    <ItemGroup>
      <Compile Include="$(ProjectDir)Generated Files/*.cs" Exclude="@(Compile)" />
    </ItemGroup>
  </Target>
</Project>
