<Project Sdk="Microsoft.NET.Sdk">

  <PropertyGroup>
    <TargetFrameworks>$(LibBuildTFMs)</TargetFrameworks>
    <Platforms>x64;x86</Platforms>
  </PropertyGroup>

  <ItemGroup>
    <ProjectReference Include="..\..\Tests\TestComponentCSharp\TestComponentCSharp.vcxproj" />
    <ProjectReference Include="..\..\TestWinRT\TestComponent\TestComponent.vcxproj" />
    <PackageReference Include="System.Numerics.Vectors" Version="4.5.0" />
    <ProjectReference Include="..\..\WinRT.Runtime\WinRT.Runtime.csproj" />
    <ProjectReference Include="..\..\cswinrt\cswinrt.vcxproj" />
    <ProjectReference Include="..\Windows\Windows.csproj" />
    <ProjectReference Include="..\WinAppSDK\WinAppSDK.csproj" />
    <InternalsVisibleTo Include="UnitTest" />
  </ItemGroup>

  <PropertyGroup>
    <CsWinRTIncludes>TestComponent;TestComponentCSharp</CsWinRTIncludes>
    <!--PkgMicrosoft_WindowsAppSDK is set in in obj\*.csproj.nuget.g.props with TargetFramework condition, doesn't support multi-targeting-->
    <PkgMicrosoft_WindowsAppSDK>$([MSBuild]::NormalizeDirectory('$(NuGetPackageRoot)', 'microsoft.windowsappsdk', '$(MicrosoftWinAppSDKVersion)'))</PkgMicrosoft_WindowsAppSDK>
  </PropertyGroup>
  <ItemGroup>
    <!--Explicitly reference WinAppSDK winmds from TFM uap10.0-->
    <CsWinRTInputs Include="$(PkgMicrosoft_WindowsAppSDK)/**/*.winmd" />
  </ItemGroup>

</Project>
