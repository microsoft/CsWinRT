<Project ToolsVersion="14.0" xmlns="http://schemas.microsoft.com/developer/msbuild/2003" >

  <PropertyGroup>
    <SimulateCsWinRTNugetReference>true</SimulateCsWinRTNugetReference>
  </PropertyGroup>
  
  <Import Project="$([MSBuild]::GetPathOfFileAbove('Directory.Build.props', '$(MSBuildThisFileDirectory)../'))" />
    
  <!--
    In Release x64, we publish with NativeAOT to test the self-contained WinRT component mode.
    When we do this, we also skip bundling the activation manifest in the C++ consumer. That is
    only needed when the implementation .dll is not the native .dll being loaded. So by dropping
    it we can also further validate that the self-contained authoring scenario works correctly
  -->
  <PropertyGroup Condition="'$(Configuration)' == 'Release' and '$(Platform)' == 'x64'">
    <PublishAot>true</PublishAot>
    <NativeLib>Shared</NativeLib>

    <!--
      Treat all AOT warnings as errors. We want to make sure that we really are not producing any AOT
      warnings anywhere (from ILC, not just from the analyzers) when publishing this project. This means
      we must validate there's no AOT warnings coming from WinRT.Runtime nor from generated code here.
      Keep in sync with: https://learn.microsoft.com/dotnet/core/deploying/native-aot/fixing-warnings.
    -->
    <WarningsAsErrors>$(WarningsAsErrors);IL3050;IL3051;IL3052;IL3053;IL3054;IL3055;IL3056</WarningsAsErrors>
  </PropertyGroup>

</Project>
