<Project ToolsVersion="14.0" xmlns="http://schemas.microsoft.com/developer/msbuild/2003" >

  <PropertyGroup>
    <SimulateCsWinRTNugetReference>true</SimulateCsWinRTNugetReference>
  </PropertyGroup>
  
  <Import Project="$([MSBuild]::GetPathOfFileAbove('Directory.Build.props', '$(MSBuildThisFileDirectory)../'))" />
    
  <!--
    In Release x64, we publish with NativeAOT to test the self-contained WinRT component mode.
    When we do this, we also skip bundling the activation manifest in the C++ consumer. That is
    only needed when the implementation .dll is not the native .dll being loaded. So by dropping
    it we can also further validate that the self-contained authoring scenario works correctly
  -->
  <PropertyGroup Condition="'$(Configuration)' == 'Release' and '$(Platform)' == 'x64'">
    <PublishAot>true</PublishAot>
    <NativeLib>Shared</NativeLib>

    <!-- General .NET and NativeAOT size saving options -->
    <UseSystemResourceKeys>true</UseSystemResourceKeys>
    <InvariantGlobalization>true</InvariantGlobalization>
    <OptimizationPreference>Size</OptimizationPreference>
    <StackTraceSupport>false</StackTraceSupport>

    <!-- Unsupported size saving options, can be experimented with to investigate binary size -->
    <IlcFoldIdenticalMethodBodies>false</IlcFoldIdenticalMethodBodies>
    <IlcDisableReflection>false</IlcDisableReflection>

    <!-- Enable generating files to inspect the binary size with sizoscope (https://github.com/MichalStrehovsky/sizoscope) -->
    <IlcGenerateMstatFile>true</IlcGenerateMstatFile>
    <IlcGenerateDgmlFile>true</IlcGenerateDgmlFile>
  </PropertyGroup>

</Project>
