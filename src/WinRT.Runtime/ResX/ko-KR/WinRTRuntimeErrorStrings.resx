<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="ArgumentOutOfRange_Index" xml:space="preserve">
    <value>인덱스가 범위를 벗어났습니다. 음수가 아니고 컬렉션 크기보다 작아야 합니다.</value>
  </data>
  <data name="ArgumentOutOfRange_IndexLargerThanMaxValue" xml:space="preserve">
    <value>이 컬렉션은 Int32.MaxValue - 1(0x7FFFFFFF - 1)보다 큰 인덱스를 사용할 수 없습니다.</value>
  </data>
  <data name="Argument_AddingDuplicate" xml:space="preserve">
    <value>같은 키를 가진 항목이 이미 추가되었습니다.</value>
  </data>
  <data name="Argument_AddingDuplicateWithKey" xml:space="preserve">
    <value>같은 키를 가진 항목이 이미 추가되었습니다. 키: {0}</value>
  </data>
  <data name="Argument_IndexOutOfArrayBounds" xml:space="preserve">
    <value>지정한 인덱스가 지정한 배열의 범위를 벗어났습니다.</value>
  </data>
  <data name="Argument_InsufficientSpaceToCopyCollection" xml:space="preserve">
    <value>지정된 공간이 이 컬렉션의 요소를 복사하기에 충분하지 않습니다.</value>
  </data>
  <data name="Arg_IndexOutOfRangeException" xml:space="preserve">
    <value>인덱스가 배열 범위를 벗어났습니다.</value>
  </data>
  <data name="Arg_KeyNotFound" xml:space="preserve">
    <value>지정된 키가 사전에 없습니다.</value>
  </data>
  <data name="Arg_KeyNotFoundWithKey" xml:space="preserve">
    <value>지정한 키 '{0}' 사전에 없습니다.</value>
  </data>
  <data name="Arg_RankMultiDimNotSupported" xml:space="preserve">
    <value>요청한 작업에는 1차원 배열만 지원됩니다.</value>
  </data>
  <data name="InvalidOperation_CannotRemoveLastFromEmptyCollection" xml:space="preserve">
    <value>빈 컬렉션에서 마지막 요소를 제거할 수 없습니다.</value>
  </data>
  <data name="InvalidOperation_CollectionBackingDictionaryTooLarge" xml:space="preserve">
    <value>이 사전을 지원하는 컬렉션에 너무 많은 요소가 포함되어 있습니다.</value>
  </data>
  <data name="InvalidOperation_CollectionBackingListTooLarge" xml:space="preserve">
    <value>이 목록을 지원하는 컬렉션에 너무 많은 요소가 포함되어 있습니다.</value>
  </data>
  <data name="InvalidOperation_EnumEnded" xml:space="preserve">
    <value>열거가 이미 완료되었습니다.</value>
  </data>
  <data name="InvalidOperation_EnumFailedVersion" xml:space="preserve">
    <value>컬렉션이 수정되었습니다. 열거 작업을 실행할 수 없습니다.</value>
  </data>
  <data name="InvalidOperation_EnumNotStarted" xml:space="preserve">
    <value>열거가 시작되지 않았습니다. MoveNext를 호출합니다.</value>
  </data>
  <data name="NotSupported_KeyCollectionSet" xml:space="preserve">
    <value>사전에서 파생된 키 컬렉션을 변경하는 것은 허용되지 않습니다.</value>
  </data>
  <data name="NotSupported_ValueCollectionSet" xml:space="preserve">
    <value>사전에서 파생된 값 컬렉션을 변경하는 것은 허용되지 않습니다.</value>
  </data>
</root>