<?xml version="1.0" encoding="utf-8"?>
<root>
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="ArrayMarkedInOrOut_Brief" xml:space="preserve">
    <value>Parámetro de matriz marcado como InAttribute o OutAttribute</value>
  </data>
  <data name="ArrayMarkedInOrOut_Text1" xml:space="preserve">
    <value>El método '{0}' tiene un parámetro '{1}' que es una matriz y que tiene System.Runtime.InteropServices.InAttribute o System.Runtime.InteropServices.OutAttribute.</value>
  </data>
  <data name="ArrayMarkedInOrOut_Text2" xml:space="preserve">
    <value>En el Windows Runtime, los parámetros de matriz deben tener ReadOnlyArray o WriteOnlyArray.</value>
  </data>
  <data name="ArrayMarkedInOrOut_Text3" xml:space="preserve">
    <value>Quite estos atributos o reemplácelos por el atributo de Windows Runtime adecuado si es necesario.</value>
  </data>
  <data name="ArrayOutputParamMarkedRead_Brief" xml:space="preserve">
    <value>Parámetro de matriz marcado como `out` y ReadOnlyArray</value>
  </data>
  <data name="ArrayOutputParamMarkedRead_Text1" xml:space="preserve">
    <value>El método '{0}' tiene un parámetro de salida '{1}' que es una matriz, pero que tiene el atributo ReadOnlyArray.</value>
  </data>
  <data name="ArrayOutputParamMarkedRead_Text2" xml:space="preserve">
    <value>En el Windows Runtime, se puede escribir en el contenido de las matrices de salida. Quite el atributo de '{1}'.</value>
  </data>
  <data name="ArrayParamMarkedBoth_Brief" xml:space="preserve">
    <value>Parámetro de matriz marcado como ReadOnlyArray y WriteOnlyArray</value>
  </data>
  <data name="ArrayParamMarkedBoth_Text1" xml:space="preserve">
    <value>El método '{0}' tiene un parámetro '{1}' que es una matriz y que tiene ReadOnlyArray y WriteOnlyArray.</value>
  </data>
  <data name="ArrayParamMarkedBoth_Text2" xml:space="preserve">
    <value>En el Windows Runtime, los parámetros de la matriz de contenido deben ser legibles o grabables. Quite uno de los atributos de '{1}'.</value>
  </data>
  <data name="ArrayParamNotMarked_Brief" xml:space="preserve">
    <value>Parámetro de matriz no marcado como ReadOnlyArray o WriteOnlyArray</value>
  </data>
  <data name="ArrayParamNotMarked_Text1" xml:space="preserve">
    <value>El método '{0}' tiene un parámetro '{1}' que es una matriz.</value>
  </data>
  <data name="ArrayParamNotMarked_Text2" xml:space="preserve">
    <value>En el Windows Runtime, el contenido de los parámetros de matriz debe ser legible o grabable; aplique ReadOnlyArray o WriteOnlyArray a '{1}'.</value>
  </data>
  <data name="ClassConstructorRule_Brief" xml:space="preserve">
    <value>Regla de constructor de clase</value>
  </data>
  <data name="ClassConstructorRule_Text" xml:space="preserve">
    <value>Las clases no pueden tener varios constructores de la misma aridad en el Windows Runtime, la clase {0} tiene varios constructores de aridad {1}</value>
  </data>
  <data name="DisjointNamespaceRule_Brief" xml:space="preserve">
    <value>El espacio de nombres es independiente del espacio de nombres principal (winmd)</value>
  </data>
  <data name="DisjointNamespaceRule_Text1" xml:space="preserve">
    <value>Un tipo público tiene un espacio de nombres ('{1}') que no comparte ningún prefijo común con otros espacios de nombres ('{0}').</value>
    <comment>{1} and {0} will be some user-defined keyword</comment>
  </data>
  <data name="DisjointNamespaceRule_Text2" xml:space="preserve">
    <value>Todos los tipos de un archivo de metadatos de Windows deben existir en un subes namespace del espacio de nombres que implica el nombre de archivo.</value>
    <comment>"sub namespace" means a namespace defined within another namespace</comment>
  </data>
  <data name="GenericTypeRule_Brief" xml:space="preserve">
    <value>La clase (o interfaz) es genérica</value>
  </data>
  <data name="GenericTypeRule_Text" xml:space="preserve">
    <value>El tipo {0} es genérico, los tipos de Windows Runtime no pueden ser genéricos</value>
    <comment>{0} will be some user-defined keyword</comment>
  </data>
  <data name="JaggedArrayRule_Brief" xml:space="preserve">
    <value>Se encontró una firma de matriz con matriz escalonada, que no es un tipo WinRT válido</value>
  </data>
  <data name="JaggedArrayRule_Text" xml:space="preserve">
    <value>El método {0} tiene una matriz anidada de tipo {1} en su signatura; las matrices de Windows Runtime signatura de método no se pueden anidar</value>
  </data>
  <data name="MultiDimensionalArrayRule_Brief" xml:space="preserve">
    <value>Se encontró una firma de matriz con una matriz multidimensional, que no es un tipo de Windows Runtime válido</value>
  </data>
  <data name="MultiDimensionalArrayRule_Text" xml:space="preserve">
    <value>El método '{0}' tiene una matriz multidimensional de tipo '{1}" en su firma; las matrices de métodos de firma de Windows Runtime deben ser unidimensionales</value>
  </data>
  <data name="MultipleDefaultOverloadAttribute_Brief" xml:space="preserve">
    <value>Solo se debe designar una sobrecarga como predeterminada</value>
  </data>
  <data name="MultipleDefaultOverloadAttribute_Text1" xml:space="preserve">
    <value>En la clase {2}: varias sobrecargas -parameter {0} de '{1}' se decoran con Windows.Foundation.Metadata.DefaultOverloadAttribute.</value>
  </data>
  <data name="MultipleDefaultOverloadAttribute_Text2" xml:space="preserve">
    <value>El atributo solo se puede aplicar a una sobrecarga del método.</value>
  </data>
  <data name="NamespacesDifferByCase_Brief" xml:space="preserve">
    <value>Los nombres de espacio de nombres no pueden diferir solo en mayúsculas y minúsculas</value>
  </data>
  <data name="NamespacesDifferByCase_Text" xml:space="preserve">
    <value>Se encontraron varios espacios de nombres con el nombre '{0}'; los nombres de espacio de nombres no pueden diferir solo por mayúsculas y minúsculas en el Windows Runtime</value>
    <comment>{0} will be some user-defined keyword</comment>
  </data>
  <data name="NeedDefaultOverloadAttribute_Brief" xml:space="preserve">
    <value>Se han detectado varias sobrecargas sin el atributo DefaultOverload</value>
  </data>
  <data name="NeedDefaultOverloadAttribute_Text" xml:space="preserve">
    <value>En la clase {2}: las sobrecargas -parameter {0} de {1} deben tener exactamente un método especificado como sobrecarga predeterminada decorando con Windows.Foundation.Metadata.DefaultOverloadAttribute</value>
  </data>
  <data name="NonArrayMarkedInOrOut_Brief" xml:space="preserve">
    <value>Parámetro (no tipo de matriz) marcado como InAttribute o OutAttribute</value>
  </data>
  <data name="NonArrayMarkedInOrOut_Text1" xml:space="preserve">
    <value>El método '{0}' tiene un parámetro '{1}' con System.Runtime.InteropServices.InAttribute o System.Runtime.InteropServices.OutAttribute.Windows Runtime no admite marcar parámetros con System.Runtime.InteropServices.InAttribute o System.Runtime.InteropServices.OutAttribute.</value>
  </data>
  <data name="NonArrayMarkedInOrOut_Text2" xml:space="preserve">
    <value>Considere la posibilidad de quitar System.Runtime.InteropServices.InAttribute y reemplace System.Runtime.InteropServices.OutAttribute por el modificador 'out'.</value>
  </data>
  <data name="NonArrayMarked_Brief" xml:space="preserve">
    <value>Parámetro que no es de matriz marcado con ReadOnlyArray o WriteOnlyArray</value>
  </data>
  <data name="NonArrayMarked_Text1" xml:space="preserve">
    <value>El método '{0}' tiene un parámetro '{1}' que no es una matriz y que tiene un atributo ReadOnlyArray o un atributo WriteOnlyArray.</value>
  </data>
  <data name="NonArrayMarked_Text2" xml:space="preserve">
    <value>Windows Runtime no admite el marcado de parámetros que no son de matriz con ReadOnlyArray o WriteOnlyArray.</value>
  </data>
  <data name="NonWinRTInterface_Brief" xml:space="preserve">
    <value>Interfaz heredada no válida</value>
  </data>
  <data name="NonWinRTInterface_Text" xml:space="preserve">
    <value>Windows Runtime tipo de componente {0} no puede implementar {1} de interfaz, ya que la interfaz no es una interfaz Windows Runtime válida</value>
  </data>
  <data name="NoPublicTypesRule_Brief" xml:space="preserve">
    <value>No hay tipos públicos definidos</value>
  </data>
  <data name="NoPublicTypesRule_Text" xml:space="preserve">
    <value>Windows Runtime componentes deben tener al menos un tipo público</value>
  </data>
  <data name="OperatorOverloadedRule_Brief" xml:space="preserve">
    <value>Sobrecarga de operador expuesta</value>
  </data>
  <data name="OperatorOverloadedRule_Text" xml:space="preserve">
    <value>{0} es una sobrecarga de operador, los tipos administrados no pueden exponer sobrecargas de operador en el Windows Runtime</value>
  </data>
  <data name="ParameterNamedValueRule_Brief" xml:space="preserve">
    <value>Regla de valor con nombre de parámetro</value>
  </data>
  <data name="ParameterNamedValueRule_Text" xml:space="preserve">
    <value>El nombre de parámetro {1} en el método {0} es el mismo que el nombre del parámetro de valor devuelto usado en la interoperabilidad C#/WinRT generada; usar un nombre de parámetro diferente</value>
  </data>
  <data name="PrivateGetterRule_Brief" xml:space="preserve">
    <value>La propiedad debe tener captador público</value>
  </data>
  <data name="PrivateGetterRule_Text" xml:space="preserve">
    <value>La propiedad '{0}' no tiene un método getter público. Windows Runtime no admite propiedades de solo establecedor.</value>
    <comment>{0} will be some user-defined keyword</comment>
  </data>
  <data name="RefParameterFound_Brief" xml:space="preserve">
    <value>Parámetro pasado por referencia</value>
  </data>
  <data name="RefParameterFound_Text" xml:space="preserve">
    <value>El método '{0}' tiene el parámetro '{1}' marcado como 'ref'; no se permiten parámetros de referencia en Windows Runtime</value>
  </data>
  <data name="StructHasConstFieldRule_Brief" xml:space="preserve">
    <value>Campo Const en struct</value>
  </data>
  <data name="StructHasConstFieldRule_Text" xml:space="preserve">
    <value>La estructura {0} tiene un campo const: las constantes solo pueden aparecer en enumeraciones de Windows Runtime.</value>
  </data>
  <data name="StructHasInvalidFieldRule_Brief" xml:space="preserve">
    <value>Campo no válido en struct</value>
  </data>
  <data name="StructHasInvalidFieldRule_Text1" xml:space="preserve">
    <value>La estructura {0} tiene un campo de tipo {1}; {1} no es un tipo de campo Windows Runtime válido.</value>
  </data>
  <data name="StructHasInvalidFieldRule_Text2" xml:space="preserve">
    <value>Cada campo de una estructura de Windows Runtime solo puede ser UInt8, Int16, UInt16, Int32, UInt32, Int64, UInt64, Single, Double, Boolean, String, Enum o, a su vez, una estructura.</value>
  </data>
  <data name="StructHasPrivateFieldRule_Brief" xml:space="preserve">
    <value>Campo privado en struct</value>
  </data>
  <data name="StructHasPrivateFieldRule_Text" xml:space="preserve">
    <value>La estructura {0} tiene un campo no público. Todos los campos deben ser públicos para las estructuras Windows Runtime.</value>
  </data>
  <data name="StructWithNoFieldsRule_Brief" xml:space="preserve">
    <value>Regla de estructura vacía</value>
  </data>
  <data name="StructWithNoFieldsRule_Text" xml:space="preserve">
    <value>La estructura {0} no contiene campos públicos. Windows Runtime estructuras deben contener al menos un campo público.</value>
  </data>
  <data name="UnimplementedInterface_Brief" xml:space="preserve">
    <value>La clase implementa incorrectamente una interfaz</value>
  </data>
  <data name="UnimplementedInterface_Text" xml:space="preserve">
    <value>La clase '{0}' no implementa correctamente la interfaz '{1}' porque falta el miembro '{2}' o no es público</value>
  </data>
  <data name="UnsealedClassRule_Brief" xml:space="preserve">
    <value>La clase no está cerrada</value>
  </data>
  <data name="UnsealedClassRule_Text" xml:space="preserve">
    <value>No se admite la exportación de tipos no cerrados en CsWinRT. Marque el tipo {0} como cerrado</value>
    <comment>{0} will be some user-defined keyword</comment>
  </data>
  <data name="UnsupportedTypeRule_Brief" xml:space="preserve">
    <value>Exponiendo el tipo no admitido</value>
  </data>
  <data name="UnsupportedTypeRule_Text1" xml:space="preserve">
    <value>El miembro '{0}' tiene el tipo '{1}' en su signatura.</value>
    <comment>{0} and {1} will be user-defined keywords</comment>
  </data>
  <data name="UnsupportedTypeRule_Text2" xml:space="preserve">
    <value>El tipo '{1}' no es un tipo Windows Runtime válido.</value>
    <comment>{1} will be some user-defined keyword</comment>
  </data>
  <data name="UnsupportedTypeRule_Text3" xml:space="preserve">
    <value>Sin embargo, el tipo (o sus parámetros genéricos) implementan interfaces que son tipos de Windows Runtime válidos.</value>
  </data>
  <data name="UnsupportedTypeRule_Text4" xml:space="preserve">
    <value>Considere la posibilidad de cambiar el tipo '{1} de la firma de miembro a uno de los siguientes tipos de System.Collections.Generic: {2}.</value>
    <comment>{1} and {2} will be keywords (types) from DotNet</comment>
  </data>
</root>